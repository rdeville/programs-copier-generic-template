---
Generate Changelog:
  image: alpine:latest
  stage: release
  needs:
    - Lint All Commit Since Default Branch
  before_script: &before_script
    - apk add --update --no-cache
        git
        python3
        py3-pip
    - python3 -m venv .env
    - source .env/bin/activate
    - pip3 install
        python-semantic-release
    - export PYTHONPATH=${PWD}/.release
  script:
    # Avoid being in detached state
    - git fetch
    - git switch ${CI_MERGE_REQUEST_SOURCE_BRANCH_NAME:-$CI_COMMIT_BRANCH}
    - semantic-release -c releaserc.toml changelog
    - head -n 100 CHANGELOG.md
  rules:
    # Do Not run when called from upstream as upstream calls mean copier update
    - if: $CI_PIPELINE_SOURCE =~ /(parent_pipeline|pipeline)/
      when: never
      # Run on MR if target is main
    - if: $CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      # Run on push to main
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      # Do not run otherwise
    - when: never

Tag and Release:
  image: alpine:latest
  stage: release
  needs:
    - Generate Changelog
  before_script: *before_script
  script:
    # Avoid being in detached state
    - git fetch
    - git switch "${CI_DEFAULT_BRANCH}"
    - git pull
    - git remote set-url origin "https://gitlab-ci-token:${DOTGIT_SYNC_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}"
    - semantic-release -c releaserc.toml version
  rules:
    # Do Not run when called from upstream as upstream calls mean copier update
    - if: $CI_PIPELINE_SOURCE =~ /(parent_pipeline|pipeline)/
      when: never
      # Run on push to main
    - if: $CI_PIPELINE_SOURCE == "push" && $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
      # Do not run otherwise
    - when: never
